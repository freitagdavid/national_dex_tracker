/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from "@App/services/types.generated";

import { api } from "@App/services/baseApi";
import {
    Exact,
    Pokemon_V2_Pokemonspecies_Bool_Exp,
} from "@App/services/types.generated";
export type GetFilteredPokemonQueryVariables = Types.Exact<{
    pokemonV2PokemonspeciesWhere?: Types.InputMaybe<Types.Pokemon_V2_Pokemonspecies_Bool_Exp>;
    spritesPath?: Types.InputMaybe<Types.Scalars["String"]["input"]>;
}>;

export type GetFilteredPokemonQuery = {
    __typename?: "query_root";
    pokemon_v2_pokemonspecies: Array<{
        __typename?: "pokemon_v2_pokemonspecies";
        name: string;
        id: number;
        pokemon_v2_pokemons: Array<{
            __typename?: "pokemon_v2_pokemon";
            pokemon_v2_pokemontypes: Array<{
                __typename?: "pokemon_v2_pokemontype";
                id: number;
                pokemon_id?: number;
                slot: number;
                type_id?: number;
            }>;
            pokemon_v2_pokemonsprites: Array<{
                __typename?: "pokemon_v2_pokemonsprites";
                sprites: any;
                pokemon_id?: number;
                id: number;
            }>;
        }>;
    }>;
};

export interface FilteredPokemonItem {
    __typename?: "pokemon_v2_pokemonspecies";
    id: number;
    name: string;
    pokemon_v2_pokemons: Array<{
        __typename?: "pokemon_v2_pokemon";
        pokemon_v2_pokemontypes: Array<{
            __typename?: "pokemon_v2_pokemontype";
            id: number;
            pokemon_id?: number;
            slot: number;
            type_id?: number;
        }>;
        pokemon_v2_pokemonsprites: Array<{
            __typename?: "pokemon_v2_pokemonsprites";
            sprites: {
                front_default: "string";
            };
            pokemon_id?: number;
            id: number;
        }>;
    }>;
}

export const GetFilteredPokemonDocument = `
    query GetFilteredPokemon($pokemonV2PokemonspeciesWhere: pokemon_v2_pokemonspecies_bool_exp, $spritesPath: String) {
  pokemon_v2_pokemonspecies(where: $pokemonV2PokemonspeciesWhere, order_by: {order: asc} ) {
    name
    id
    pokemon_v2_pokemons {
      pokemon_v2_pokemontypes {
        id
        pokemon_id
        slot
        type_id
      }
      pokemon_v2_pokemonsprites {
        sprites(path: $spritesPath)
        pokemon_id
        id
      }
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
    endpoints: (build) => ({
        GetFilteredPokemon: build.query<
            GetFilteredPokemonQuery,
            GetFilteredPokemonQueryVariables | void
        >({
            query: (variables) => ({
                document: GetFilteredPokemonDocument,
                variables,
            }),
        }),
    }),
});

export { injectedRtkApi as api };
export const { useGetFilteredPokemonQuery, useLazyGetFilteredPokemonQuery } =
    injectedRtkApi;

export const constructVariables = ([
    generationId,
    versionGroupId,
    typeId,
    spritesPath = "other.official-artwork",
]: [number | null, number | null, number | null, string | null]): void | Exact<{
    pokemonV2PokemonspeciesWhere?:
        | Pokemon_V2_Pokemonspecies_Bool_Exp
        | undefined;
}> => {
    let returnObject = {};

    if (generationId) {
        returnObject = {
            ...returnObject,
            generation_id: { _eq: generationId },
        };
    }

    if (versionGroupId) {
        returnObject = {
            ...returnObject,
            pokemon_v2_generation: {
                pokemon_v2_versiongroups: { id: { _eq: versionGroupId } },
            },
        };
    }

    if (typeId) {
        returnObject = {
            ...returnObject,
            pokemon_v2_pokemons: {
                pokemon_v2_pokemontypes: { type_id: { _eq: typeId } },
            },
        };
    }

    returnObject = {
        pokemonV2PokemonspeciesWhere: returnObject,
        spritesPath,
    };

    return returnObject;
};
